version: "3.10"

services:
  nginx-proxy:
    container_name: nginx
    image: jwilder/nginx-proxy
    restart: "always"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/vhost/:/etc/nginx/vhost.d:ro
      - ./nginx/conf.d/client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf:ro
      - ./nginx/proxy.conf/:/etc/nginx/proxy.conf
      - ./static/:/news_board_API/static
      - ./media/:/news_board_API/media

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    restart: on-failure
    command: [ "redis-server", "--appendonly", "yes" ]
    hostname: redis

  postgres:
    image: postgres
    volumes:
      - ./pgdb:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file: ./.env

  web:
    container_name: web
    build:
      context: .
      dockerfile: Dockerfile
    restart: "always"
    ports:
      - "8000:8000"
    volumes:
      - .:/code/
      # - ./static/:/code/static
      # - ./media/:/code/media
    depends_on:
      - "postgres"
    env_file: ./.env

  celery:
    build:
      context: .
      dockerfile: celery.dockerfile
    volumes:
      - .:/code
    command: celery -A news_board_API worker -l info -B
    links:
      - redis
      - postgres
    depends_on:
      - "redis"
      - "postgres"
    env_file: ./.env

networks:
  default:
    external:
      name: nginx-proxy
  web:
    external: true
